const fs = require('fs');
const YAML = require('yaml');
const axios = require('axios');

module.exports = (basicMessage, msgsArray, templateName) => new Promise((resolve, reject) => {
    // we load the core configuration file
    const rawConfig = fs.readFileSync(`${__dirname}/../../configs/config.yml`, 'utf-8');
    const config = YAML.parse(rawConfig);

    // if we have a slack configuration section and a webhook defined, we will proceed to craft the payload
    if (config.config.slack && config.config.slack.webhook) {
        // message head
        const msgBlock = {
            text: basicMessage,
            blocks: [{
                type: "section",
                text: {
                    type: "mrkdwn",
                    text: `*Errors occurred when running the template "${templateName}".*`
                }
            }]
        };
    
        // we will add each message reported to the payload
        for (let idx in msgsArray) {
            const msg = msgsArray[idx];
            msgBlock.blocks.push({
                type: "section",
                text: {
                    type: "mrkdwn",
                    text: msg
                }
            });
        }
    
        // message tail
        msgBlock.blocks.push({
            type: "section",
            text: {
                type: "mrkdwn",
                text: `Please review the PDF document generated by the SysDiag application regarding this test.`
            }
        });
    
        // we send the payload over to the slack servers...
        axios.post(config.config.slack.webhook, msgBlock).then(() => resolve()).catch(() => resolve());
    // ... or we don't
    } else {
        console.log("[INFO] There is no slack configuration! Skipping the report.");
        resolve();
    }

});